import { serviceCapabilities } from '@libp2p/interface';
import { AbstractIdentify } from './utils.js';
import type { IdentifyPush as IdentifyPushInterface, IdentifyPushComponents, IdentifyPushInit } from './index.js';
import type { Startable } from '@libp2p/interface';
import type { IncomingStreamData } from '@libp2p/interface-internal';
export declare class IdentifyPush extends AbstractIdentify implements Startable, IdentifyPushInterface {
    private readonly connectionManager;
    private readonly concurrency;
    constructor(components: IdentifyPushComponents, init?: IdentifyPushInit);
    [serviceCapabilities]: string[];
    /**
     * Calls `push` on all peer connections
     */
    push(): Promise<void>;
    /**
     * Reads the Identify Push message from the given `connection`
     */
    handleProtocol(data: IncomingStreamData): Promise<void>;
}
//# sourceMappingURL=identify-push.d.ts.map