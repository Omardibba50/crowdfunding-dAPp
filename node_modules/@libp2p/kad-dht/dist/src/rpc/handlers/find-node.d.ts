import type { PeerInfoMapper } from '../../index.js';
import type { Message } from '../../message/dht.js';
import type { PeerRouting } from '../../peer-routing/index.js';
import type { DHTMessageHandler } from '../index.js';
import type { ComponentLogger, PeerId } from '@libp2p/interface';
import type { AddressManager } from '@libp2p/interface-internal';
export interface FindNodeHandlerInit {
    peerRouting: PeerRouting;
    logPrefix: string;
    peerInfoMapper: PeerInfoMapper;
}
export interface FindNodeHandlerComponents {
    peerId: PeerId;
    addressManager: AddressManager;
    logger: ComponentLogger;
}
export declare class FindNodeHandler implements DHTMessageHandler {
    private readonly peerRouting;
    private readonly peerInfoMapper;
    private readonly peerId;
    private readonly addressManager;
    private readonly log;
    constructor(components: FindNodeHandlerComponents, init: FindNodeHandlerInit);
    /**
     * Process `FindNode` DHT messages
     */
    handle(peerId: PeerId, msg: Message): Promise<Message>;
}
//# sourceMappingURL=find-node.d.ts.map