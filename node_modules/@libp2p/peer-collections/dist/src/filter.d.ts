import type { PeerId } from '@libp2p/interface';
/**
 * Uses a Cuckoo filter to implement a mechanism for deduplicating PeerIds in a
 * way that uses a smaller amount of memory than a PeerSet.
 */
export declare class PeerFilter {
    private readonly filter;
    constructor(size: number, errorRate?: number);
    has(peerId: PeerId): boolean;
    add(peerId: PeerId): void;
    remove(peerId: PeerId): void;
}
/**
 * Create and return a PeerFilter
 *
 * @param size - The maximum number of peers expected to be added to the filter
 * @param errorRate - The acceptable error rate
 */
export declare function peerFilter(size: number, errorRate?: number): PeerFilter;
//# sourceMappingURL=filter.d.ts.map