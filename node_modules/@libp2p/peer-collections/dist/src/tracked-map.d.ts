import { PeerMap } from './map.js';
import type { Metrics } from '@libp2p/interface';
export interface TrackedPeerMapInit {
    name: string;
    metrics: Metrics;
}
export interface CreateTrackedPeerMapInit {
    /**
     * The metric name to use
     */
    name: string;
    /**
     * A metrics implementation
     */
    metrics?: Metrics;
}
/**
 * Creates a PeerMap that reports it's size to the libp2p Metrics service
 *
 * @example
 *
 * * ```Typescript
 * import { trackedPeerMap } from '@libp2p/peer-collections'
 * import { createLibp2p } from 'libp2p'
 *
 * const libp2p = await createLibp2p()
 *
 * const list = trackedPeerMap({ name: 'my_metric_name', metrics: libp2p.metrics })
 * map.set(peerId, 'value')
 * ```
 */
export declare function trackedPeerMap<V>(config: CreateTrackedPeerMapInit): PeerMap<V>;
//# sourceMappingURL=tracked-map.d.ts.map