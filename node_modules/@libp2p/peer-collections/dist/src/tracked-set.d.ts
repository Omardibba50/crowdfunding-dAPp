import { PeerSet } from './set.js';
import type { Metrics } from '@libp2p/interface';
export interface TrackedPeerSetInit {
    name: string;
    metrics: Metrics;
}
export interface CreateTrackedPeerSetInit {
    /**
     * The metric name to use
     */
    name: string;
    /**
     * A metrics implementation
     */
    metrics?: Metrics;
}
/**
 * Creates a PeerSet that reports it's size to the libp2p Metrics service
 *
 * @example Tracked peer sets
 *
 * * ```Typescript
 * import { trackedPeerSet } from '@libp2p/peer-collections'
 * import { createLibp2p } from 'libp2p'
 *
 * const libp2p = await createLibp2p()
 *
 * const list = trackedPeerSet({ name: 'my_metric_name', metrics: libp2p.metrics })
 * map.add(peerId)
 * ```
 */
export declare function trackedPeerSet(config: CreateTrackedPeerSetInit): PeerSet;
//# sourceMappingURL=tracked-set.d.ts.map