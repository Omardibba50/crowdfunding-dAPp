import { AbortError } from '@libp2p/interface';
import pDefer from 'p-defer';
export class JobRecipient {
    deferred;
    signal;
    constructor(signal) {
        this.signal = signal;
        this.deferred = pDefer();
        this.onAbort = this.onAbort.bind(this);
        this.signal?.addEventListener('abort', this.onAbort);
    }
    onAbort() {
        this.deferred.reject(this.signal?.reason ?? new AbortError());
    }
    cleanup() {
        this.signal?.removeEventListener('abort', this.onAbort);
    }
}
//# sourceMappingURL=recipient.js.map