import type { AutoNATComponents, AutoNATServiceInit } from './index.js';
import type { Startable } from '@libp2p/interface';
import type { IncomingStreamData } from '@libp2p/interface-internal';
export declare class AutoNATService implements Startable {
    private readonly components;
    private readonly startupDelay;
    private readonly refreshInterval;
    private readonly protocol;
    private readonly timeout;
    private readonly maxInboundStreams;
    private readonly maxOutboundStreams;
    private verifyAddressTimeout?;
    private started;
    private readonly log;
    constructor(components: AutoNATComponents, init: AutoNATServiceInit);
    readonly [Symbol.toStringTag] = "@libp2p/autonat";
    isStarted(): boolean;
    start(): Promise<void>;
    stop(): Promise<void>;
    /**
     * Handle an incoming AutoNAT request
     */
    handleIncomingAutonatStream(data: IncomingStreamData): Promise<void>;
    _verifyExternalAddresses(): void;
    private handleAutonatMessage;
    /**
     * Our multicodec topology noticed a new peer that supports autonat
     */
    verifyExternalAddresses(): Promise<void>;
}
//# sourceMappingURL=autonat.d.ts.map