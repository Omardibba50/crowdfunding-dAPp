/**
 * Multicodec code
 */
export declare const CIRCUIT_PROTO_CODE = 290;
/**
 * The maximum number of relay reservations the relay server will accept
 */
export declare const DEFAULT_MAX_RESERVATION_STORE_SIZE = 15;
/**
 * How often to check for reservation expiry
 */
export declare const DEFAULT_MAX_RESERVATION_CLEAR_INTERVAL: number;
/**
 * How often to check for reservation expiry
 */
export declare const DEFAULT_MAX_RESERVATION_TTL: number;
/**
 * How many reservation attempts to make in parallel
 */
export declare const DEFAULT_RESERVATION_CONCURRENCY = 1;
/**
 * How long to wait for a reservation attempt to finsih
 */
export declare const DEFAULT_RESERVATION_COMPLETION_TIMEOUT = 1000;
/**
 * How long to let the reservation attempt queue to grow
 */
export declare const DEFAULT_MAX_RESERVATION_QUEUE_LENGTH = 100;
export declare const RELAY_SOURCE_TAG = "circuit-relay-source";
export declare const RELAY_TAG = "circuit-relay-relay";
export declare const DEFAULT_DURATION_LIMIT: number;
export declare const DEFAULT_DATA_LIMIT: bigint;
/**
 * The hop protocol
 */
export declare const RELAY_V2_HOP_CODEC = "/libp2p/circuit/relay/0.2.0/hop";
/**
 * the stop protocol
 */
export declare const RELAY_V2_STOP_CODEC = "/libp2p/circuit/relay/0.2.0/stop";
/**
 * Hop messages must be exchanged inside this timeout
 */
export declare const DEFAULT_HOP_TIMEOUT: number;
/**
 * How long to wait before starting to advertise the relay service
 */
export declare const DEFAULT_ADVERT_BOOT_DELAY: number;
export declare const MAX_CONNECTIONS = 300;
export declare const ERR_NO_ROUTERS_AVAILABLE = "ERR_NO_ROUTERS_AVAILABLE";
export declare const ERR_RELAYED_DIAL = "ERR_RELAYED_DIAL";
export declare const ERR_HOP_REQUEST_FAILED = "ERR_HOP_REQUEST_FAILED";
export declare const ERR_TRANSFER_LIMIT_EXCEEDED = "ERR_TRANSFER_LIMIT_EXCEEDED";
export declare const DEFAULT_DISCOVERY_FILTER_SIZE = 4096;
export declare const DEFAULT_DISCOVERY_FILTER_ERROR_RATE = 0.001;
//# sourceMappingURL=constants.d.ts.map